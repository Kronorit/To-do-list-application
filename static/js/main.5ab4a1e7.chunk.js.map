{"version":3,"sources":["components/SearchBar.js","components/BarNav.js","components/TaskForm.js","components/Task.js","components/TasksUndone.js","components/TasksDone.js","components/Tasks.js","logic/assignId.js","App.js","index.js"],"names":["SearchBar","state","value","handleChange","e","setState","target","props","filterTasks","className","onSubmit","preventDefault","id","type","placeholder","this","onChange","React","Component","BarNav","onClick","deleteTasksDone","TaskForm","title","addTask","autoComplete","required","Task","inputValue","edit","blurHandler","trim","editTask","clickHandler","completed","spellCheck","autoFocus","onBlur","toggleCompleted","checked","htmlFor","deleteTask","TasksUndone","tasksUndone","tasks","filter","task","length","map","TasksDone","tasksDone","Tasks","assignId","array","j","i","idArray","push","parseInt","App","filteredTasks","newTasks","undefined","alert","unshift","searchValue","element","toLowerCase","includes","a","fetch","res","json","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ab4a1e7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './components-css/SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n  state = {\r\n    value: \"\"\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({value: e.target.value});\r\n    this.props.filterTasks(e.target.value);\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n    <form \r\n      className=\"search-bar\" \r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        this.props.filterTasks(this.state.value);\r\n      }}>\r\n      <input \r\n        id=\"bar\" \r\n        type=\"text\" \r\n        placeholder=\"Search a task\" \r\n        value={this.state.value} \r\n        onChange={this.handleChange}\r\n      />\r\n      <button id=\"button\"><i className=\" fas fa-search\"></i></button>\r\n    </form>\r\n    );\r\n  }    \r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nimport SearchBar from './SearchBar.js';\r\n\r\nimport './components-css/BarNav.css';\r\n\r\nclass BarNav extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <nav className=\"nav-main\">\r\n                <h2 className=\"nav-title\">\r\n                    <span>Walkie</span>Taskie\r\n                </h2>\r\n                <SearchBar filterTasks={this.props.filterTasks}/>\r\n                <button \r\n                    className=\"delete-tasks-button\" \r\n                    onClick={this.props.deleteTasksDone}\r\n                >\r\n                    Delete tasks done\r\n                </button>\r\n            </nav>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default BarNav;\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport './components-css/TaskForm.css';\r\n\r\nclass TaskForm extends React.Component{\r\n\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({title: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n                className=\"create-task-form\" \r\n                onSubmit={e => {\r\n                    this.props.addTask(this.state.title)\r\n                    this.setState({title: ''});\r\n                    e.preventDefault();\r\n                }}\r\n            >\r\n                <input \r\n                    type=\"text\" \r\n                    id=\"create-task-title\" \r\n                    placeholder=\"Create a new task\" \r\n                    autoComplete=\"off\" \r\n                    value={this.state.title} \r\n                    required \r\n                    onChange={this.handleChange}\r\n                />\r\n                <button id=\"create-task-button\"><i className=\"fas fa-plus\"></i></button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskForm;","import React from 'react';\r\nimport './components-css/Task.css';\r\n\r\nclass Task extends React.Component{\r\n\r\n    state = {\r\n        inputValue: this.props.title,\r\n        edit: false\r\n    }\r\n    \r\n    handleChange = e => {\r\n        this.setState({inputValue: e.target.value});\r\n    }\r\n\r\n    blurHandler = () => {\r\n        if (this.state.inputValue.trim() === \"\") {\r\n            this.setState({inputValue: \"\"});\r\n        }\r\n        this.setState({edit: false});\r\n        this.props.editTask(this.props.id, this.state.inputValue);\r\n    }\r\n\r\n    clickHandler = () => {\r\n        this.setState({edit: true});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id={\"task\" + this.props.id} className=\"task\" onClick={() => {this.clickHandler();}} title=\"Edit task\">\r\n                {this.state.edit && !this.props.completed ? \r\n                    (<input type=\"text\" id=\"input-title\" value={this.state.inputValue} spellCheck=\"false\" autoFocus={true} onChange={this.handleChange} onBlur={() => {this.blurHandler()}}/>) : \r\n                    (<h3 id={\"title-task\" + this.props.id} className={\"task-title \" + (this.props.completed  ? \"task-done\" : \"task-undone\")}>{this.props.title}</h3>)}\r\n                <div className=\"task-buttons\">\r\n                    <input \r\n                        type=\"checkbox\" \r\n                        className=\"toggle-completed\" \r\n                        id={\"input-task\" + this.props.id} \r\n                        onChange={() => {this.props.toggleCompleted(this.props.id);}}\r\n                        checked= {this.props.completed}\r\n                    />\r\n                    <label className=\"input-label\" htmlFor={\"input-task\" + this.props.id} title=\"Mark as done\"></label>\r\n                    <button \r\n                        className=\"task-delete-button\" \r\n                        onClick={() => {this.props.deleteTask(this.props.id)}}\r\n                        title=\"Delete task\"\r\n                    >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                </div>    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\n\r\nimport Task from './Task.js'\r\n\r\nclass TasksUndone extends React.Component {\r\n\r\n    render() {  \r\n        const tasksUndone = this.props.tasks.filter(task => task.completed !== true);\r\n        if(tasksUndone.length > 0){\r\n            return (\r\n                <div className=\"tasks-undone\">\r\n                    {tasksUndone.map(task => {\r\n                        return(\r\n                            <Task \r\n                                title={task.title} \r\n                                completed={task.completed} \r\n                                id={task.id} \r\n                                toggleCompleted={this.props.toggleCompleted} \r\n                                deleteTask={this.props.deleteTask} \r\n                                editTask={this.props.editTask}\r\n                                key={task.id}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>)\r\n        } \r\n        else return (<p id=\"non-existent-tasks2\">All tasks are done</p>);\r\n    }\r\n}\r\n\r\nexport default TasksUndone;","import React from 'react';\r\n\r\nimport Task from './Task.js'\r\n\r\nclass TasksDone extends React.Component {\r\n\r\n    render() {    \r\n        const tasksDone = this.props.tasks.filter(task => task.completed === true);\r\n        if(tasksDone.length > 0) {    \r\n            return (\r\n                <div className=\"tasks-done\">\r\n                    {tasksDone.map(task => {\r\n                        return(\r\n                            <Task \r\n                                title={task.title} \r\n                                completed={task.completed} \r\n                                id={task.id} \r\n                                toggleCompleted={this.props.toggleCompleted} \r\n                                deleteTask={this.props.deleteTask}\r\n                                key={task.id}\r\n                            />\r\n                        );\r\n                        \r\n                    })}\r\n                </div>)\r\n        } \r\n        else return (<p id=\"non-existent-tasks1\">There's no tasks done to show</p>);\r\n    }\r\n}\r\n\r\nexport default TasksDone;","import React from 'react';\r\n\r\nimport TasksUndone from './TasksUndone.js';\r\nimport TasksDone from './TasksDone.js';\r\n\r\nclass Tasks extends React.Component{\r\n\r\n    render() {\r\n        if(this.props.tasks.length > 0){\r\n            return (\r\n                <div className=\"tasks\">\r\n                    <TasksUndone \r\n                        tasks={this.props.tasks}\r\n                        toggleCompleted={this.props.toggleCompleted} \r\n                        deleteTask={this.props.deleteTask}\r\n                        editTask={this.props.editTask}\r\n                    />\r\n                    <hr/>\r\n                    <TasksDone \r\n                        tasks={this.props.tasks}\r\n                        toggleCompleted={this.props.toggleCompleted} \r\n                        deleteTask={this.props.deleteTask}\r\n                        editTask={this.props.editTask}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n        else return <p>There's no tasks to show</p>;\r\n    }\r\n}\r\n\r\nexport default Tasks;","function assignId(array) {\r\n\tlet j = 0;\r\n\tlet i = 0;\r\n\tlet id = 0;\r\n\tlet idArray = [];\r\n\r\n\t// Create array with object's id;\r\n\tfor (j in array) idArray.push(array[j].id);\r\n\r\n\t// Create new id\r\n\tfor (i = 0; i < idArray.length; i++) {\r\n\t\tfor (j in idArray) {\r\n\t\t\tif (parseInt(idArray[j]) === id) {\r\n\t\t\t\tid += 1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (parseInt(j) + 1 === parseInt(idArray.length)) {\r\n\t\t\t\treturn id;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// In case that for loop's return id does not work do this\r\n\r\n\treturn id;\r\n}\r\n\r\nexport default assignId;","import React from 'react';\n\nimport './App.css';\n\n\n// Components\n\nimport BarNav from './components/BarNav.js';\nimport TaskForm from './components/TaskForm.js';\nimport Tasks from './components/Tasks.js';\n\n// Logic\n\nimport assignId from './logic/assignId';\n\nclass App extends React.Component {\n\n  state = {\n    tasks: [],\n    filteredTasks: []\n  }\n\n  // Fetch data from the server on component mount.\n\n  async componentDidMount(){\n    const res = await fetch('https://jsonplaceholder.typicode.com/todos');\n    const data = await res.json();\n    this.setState({\n      tasks: data,\n      filteredTasks: data\n    });\n  }\n\n  // Toggle completed property of an object.\n\n  toggleCompleted = (id) => {\n    const tasks = this.state.tasks;\n    for (let task in tasks) {\n      if(tasks[task].id === id){\n        tasks[task].completed = !tasks[task].completed;\n        break;\n      }\n    }\n    this.setState({tasks: tasks});\n  }\n\n  // Delete a task.\n\n  deleteTask = (id) => {\n    const newTasks = this.state.tasks.filter(task => task.id !== id);\n\n    this.setState({\n      tasks: newTasks,\n      filteredTasks: newTasks\n    });\n  }\n\n  // Create a new task.\n\n  addTask = (title) => {\n    const tasks = this.state.tasks;\n    if (title === null || title === undefined || title.trim() === '') alert(\"You have to write a title to create a new task\");\n    else {  \n      tasks.unshift({\n        id: assignId(tasks),\n        title: title,\n        completed: false\n      });\n\n      this.setState({\n        tasks: tasks,\n        filteredTasks: tasks\n      });\n    }\n  }\n\n  // Edit a task.\n\n  editTask = (id, title) => {\n    const tasks = this.state.tasks;\n    for (let i in tasks){\n      if (parseInt(tasks[i].id) === parseInt(id)) {\n        tasks[i].title = title;\n        break;\n      } \n    }\n    this.setState({tasks: tasks});\n  }\n\n  // Filter tasks.\n\n  filterTasks = (searchValue) => {\n    let newTasks = [];\n    if (searchValue.trim() === \"\") newTasks = this.state.tasks;\n    else {\n      newTasks = this.state.tasks.filter(element => {\n        element = element.title.toLowerCase();\n        if(element.includes(searchValue.toLowerCase())) return true;\n        return false;\n      });\n    }\n\n    this.setState({filteredTasks: newTasks});\n  }\n\n  // Delete tasks done.\n\n  deleteTasksDone = () => {\n    const newTasks = this.state.tasks.filter(task => !task.completed);\n\n    this.setState({\n      tasks: newTasks,\n      filteredTasks: newTasks\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <BarNav filterTasks={this.filterTasks} deleteTasksDone={this.deleteTasksDone}/>\n        <TaskForm addTask={this.addTask}/>\n        <div className=\"content\">\n          <Tasks \n            tasks={this.state.filteredTasks}\n            toggleCompleted={this.toggleCompleted} \n            deleteTask={this.deleteTask}\n            editTask={this.editTask}\n          />\n        </div>\n      </div>\n\n    );\n  }\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}