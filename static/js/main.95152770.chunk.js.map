{"version":3,"sources":["components/SearchBar.js","components/BarNav.js","components/TaskForm.js","components/Task.js","components/TasksUndone.js","components/TasksDone.js","components/Tasks.js","logic/assignId.js","App.js","index.js"],"names":["SearchBar","props","state","value","handleChange","bind","e","this","setState","target","filterTasks","className","onSubmit","preventDefault","id","type","placeholder","onChange","React","Component","BarNav","onClick","deleteTasksDone","TaskForm","title","addTask","autoComplete","required","Task","inputValue","edit","blurHandler","trim","editTask","clickHandler","completed","spellCheck","autoFocus","onBlur","toggleCompleted","checked","htmlFor","deleteTask","TasksUndone","tasksUndone","tasks","filter","task","length","map","TasksDone","tasksDone","Tasks","assignId","array","j","i","idArray","push","parseInt","App","filteredTasks","a","fetch","res","json","data","newTasks","undefined","alert","unshift","searchValue","element","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95152770.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './components-css/SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: \"\"\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({value: e.target.value});\r\n    this.props.filterTasks(e.target.value);\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n    <form \r\n      className=\"search-bar\" \r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        this.props.filterTasks(this.state.value);\r\n      }}>\r\n      <input id=\"bar\" type=\"text\" placeholder =\"Search a task\" value={this.state.value} onChange={this.handleChange}/>\r\n      <button id=\"button\"><i className=\" fas fa-search\"></i></button>\r\n    </form>\r\n    );\r\n  }    \r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nimport SearchBar from './SearchBar.js';\r\n\r\nimport './components-css/BarNav.css';\r\n\r\nclass BarNav extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <nav className=\"nav-main\">\r\n                <h2 className=\"nav-title\">\r\n                    <span>Walkie</span>Taskie\r\n                </h2>\r\n                <SearchBar filterTasks={this.props.filterTasks}/>\r\n                <button className=\"delete-tasks-button\" onClick={this.props.deleteTasksDone}>Delete tasks done</button>\r\n            </nav>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default BarNav;\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport './components-css/TaskForm.css';\r\n\r\nclass TaskForm extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: ''\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({title: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n                className=\"create-task-form\" \r\n                onSubmit={e => {\r\n                    this.props.addTask(this.state.title)\r\n                    this.setState({title: ''});\r\n                    e.preventDefault();\r\n                }}\r\n            >\r\n                <input type=\"text\" id=\"create-task-title\" placeholder=\"Create a new task\" autoComplete=\"off\" value={this.state.title} required onChange={this.handleChange}/>\r\n                <button id=\"create-task-button\"><i className=\"fas fa-plus\"></i></button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskForm;","import React from 'react';\r\nimport './components-css/Task.css';\r\n\r\nclass Task extends React.Component{\r\n\r\n    state = {\r\n        inputValue: this.props.title,\r\n        edit: false\r\n    }\r\n    \r\n    handleChange = e => {\r\n        this.setState({inputValue: e.target.value});\r\n    }\r\n\r\n    blurHandler = () => {\r\n        if (this.state.inputValue.trim() === \"\") {\r\n            this.setState({inputValue: \"\"});\r\n        }\r\n        this.setState({edit: false});\r\n        this.props.editTask(this.props.id, this.state.inputValue);\r\n    }\r\n\r\n    clickHandler = () => {\r\n        this.setState({edit: true});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id={\"task\" + this.props.id} className=\"task\" onClick={() => {this.clickHandler();}} title=\"Edit task\">\r\n                {this.state.edit && !this.props.completed ? (<input type=\"text\" id=\"input-title\" value={this.state.inputValue} spellCheck=\"false\" autoFocus={true} onChange={this.handleChange} onBlur={() => {this.blurHandler()}}/>) : (<h3 id={\"title-task\" + this.props.id} className={\"task-title \" + (this.props.completed  ? \"task-done\" : \"task-undone\")}>{this.props.title}</h3>)}\r\n                <div className=\"task-buttons\">\r\n                    <input \r\n                        type=\"checkbox\" \r\n                        className=\"toggle-completed\" \r\n                        id={\"input-task\" + this.props.id} \r\n                        onChange={() => {this.props.toggleCompleted(this.props.id);}}\r\n                        checked= {this.props.completed}\r\n                    />\r\n                    <label className=\"input-label\" htmlFor={\"input-task\" + this.props.id} title=\"Mark as done\"></label>\r\n                    <button \r\n                        className=\"task-delete-button\" \r\n                        onClick={() => {this.props.deleteTask(this.props.id)}}\r\n                        title=\"Delete task\"\r\n                    >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                </div>    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\n\r\nimport Task from './Task.js'\r\n\r\nclass TasksUndone extends React.Component {\r\n\r\n    render() {  \r\n        const tasksUndone = this.props.tasks.filter(task => task.completed !== true);\r\n        if(tasksUndone.length > 0){\r\n            return (\r\n                <div className=\"tasks-undone\">\r\n                    {tasksUndone.map(task => {\r\n                        return(\r\n                            <Task \r\n                                title={task.title} \r\n                                completed={task.completed} \r\n                                id={task.id} \r\n                                toggleCompleted={this.props.toggleCompleted} \r\n                                deleteTask={this.props.deleteTask} \r\n                                editTask={this.props.editTask}\r\n                                key={task.id}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>)\r\n        } \r\n        else return (<p>All tasks are done</p>);\r\n    }\r\n}\r\n\r\nexport default TasksUndone;","import React from 'react';\r\n\r\nimport Task from './Task.js'\r\n\r\nclass TasksDone extends React.Component {\r\n\r\n    render() {    \r\n        const tasksDone = this.props.tasks.filter(task => task.completed === true);\r\n        if(tasksDone.length > 0) {    \r\n            return (\r\n                <div className=\"tasks-done\">\r\n                    {tasksDone.map(task => {\r\n                        return(\r\n                            <Task \r\n                                title={task.title} \r\n                                completed={task.completed} \r\n                                id={task.id} \r\n                                toggleCompleted={this.props.toggleCompleted} \r\n                                deleteTask={this.props.deleteTask}\r\n                                key={task.id}\r\n                            />\r\n                        );\r\n                        \r\n                    })}\r\n                </div>)\r\n        } \r\n        else return (<p>There's no tasks done to show</p>);\r\n    }\r\n}\r\n\r\nexport default TasksDone;","import React from 'react';\r\n\r\nimport TasksUndone from './TasksUndone.js';\r\nimport TasksDone from './TasksDone.js';\r\n\r\nclass Tasks extends React.Component{\r\n\r\n    render() {\r\n        if(this.props.tasks.length > 0){\r\n            return (\r\n                <div className=\"tasks\">\r\n                    <TasksUndone \r\n                        tasks={this.props.tasks}\r\n                        toggleCompleted={this.props.toggleCompleted} \r\n                        deleteTask={this.props.deleteTask}\r\n                        editTask={this.props.editTask}\r\n                    />\r\n                    <hr/>\r\n                    <TasksDone \r\n                        tasks={this.props.tasks}\r\n                        toggleCompleted={this.props.toggleCompleted} \r\n                        deleteTask={this.props.deleteTask}\r\n                        editTask={this.props.editTask}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n        else return <p>There's no tasks to show</p>;\r\n    }\r\n}\r\n\r\nexport default Tasks;","function assignId(array) {\r\n\tlet j = 0;\r\n\tlet i = 0;\r\n\tlet id = 0;\r\n\tlet idArray = [];\r\n\r\n\t// Create array with object's id;\r\n\tfor (j in array) idArray.push(array[j].id);\r\n\r\n\t// Create new id\r\n\tfor (i = 0; i < idArray.length; i++) {\r\n\t\tfor (j in idArray) {\r\n\t\t\tif (parseInt(idArray[j]) === id) {\r\n\t\t\t\tid += 1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (parseInt(j) + 1 === parseInt(idArray.length)) {\r\n\t\t\t\treturn id;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// In case that for loop's return id does not work do this\r\n\r\n\treturn id;\r\n}\r\n\r\nexport default assignId;","import React from 'react';\n\nimport './App.css';\n\n\n// Components\n\nimport BarNav from './components/BarNav.js';\nimport TaskForm from './components/TaskForm.js';\nimport Tasks from './components/Tasks.js';\n\n// Logic\n\nimport assignId from './logic/assignId';\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      filteredTasks: [],\n      title: 'Lorem Ipsum Dolor'\n    };\n\n    // Binded functions\n\n    this.toggleCompleted = this.toggleCompleted.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.addTask = this.addTask.bind(this);\n    this.editTask = this.editTask.bind(this);\n    this.deleteTasksDone = this.deleteTasksDone.bind(this);\n    this.filterTasks = this.filterTasks.bind(this);\n  }\n\n  // Fetch data from the server on component mount.\n\n  async componentDidMount(){\n    const res = await fetch('https://jsonplaceholder.typicode.com/todos');\n    const data = await res.json();\n    this.setState({\n      tasks: data,\n      filteredTasks: data\n    });\n  }\n\n  // Toggle completed property of an object.\n\n  toggleCompleted(id) {\n    const tasks = this.state.tasks;\n    for (let task in tasks) {\n      if(tasks[task].id === id){\n        tasks[task].completed = !tasks[task].completed;\n        break;\n      }\n    }\n    this.setState({tasks: tasks});\n  }\n\n  // Delete a task.\n\n  deleteTask(id) {\n    const newTasks = this.state.tasks.filter(task => task.id !== id);\n\n    this.setState({\n      tasks: newTasks,\n      filteredTasks: newTasks\n    });\n  }\n\n  // Create a new task.\n\n  addTask(title) {\n    const tasks = this.state.tasks;\n    if (title === null || title === undefined || title.trim() === '') alert(\"You have to write a title to create a new task\");\n    else {  \n      tasks.unshift({\n        id: assignId(tasks),\n        title: title,\n        completed: false\n      });\n\n      this.setState({\n        tasks: tasks,\n        filteredTasks: tasks\n      });\n    }\n  }\n\n  // Edit a task.\n\n  editTask(id, title) {\n    const tasks = this.state.tasks;\n    for (let i in tasks){\n      if (parseInt(tasks[i].id) === parseInt(id)) {\n        tasks[i].title = title;\n        break;\n      } \n    }\n    this.setState({tasks: tasks});\n  }\n\n  // Filter tasks.\n\n  filterTasks(searchValue) {\n    let newTasks = [];\n    if (searchValue.trim() === \"\") newTasks = this.state.tasks;\n    else {\n      newTasks = this.state.tasks.filter(element => {\n        element = element.title.toLowerCase();\n        if(element.includes(searchValue.toLowerCase())) return true;\n        return false;\n      });\n    }\n\n    this.setState({filteredTasks: newTasks});\n  }\n\n  // Delete tasks done.\n\n  deleteTasksDone() {\n    const newTasks = this.state.tasks.filter(task => !task.completed);\n\n    this.setState({\n      tasks: newTasks,\n      filteredTasks: newTasks\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <BarNav filterTasks={this.filterTasks} deleteTasksDone={this.deleteTasksDone}/>\n        <TaskForm addTask={this.addTask}/>\n        <div className=\"content\">\n          <h2 className=\"task-list-title\">{this.state.title}</h2>\n          <Tasks \n            tasks={this.state.filteredTasks}\n            toggleCompleted={this.toggleCompleted} \n            deleteTask={this.deleteTask}\n            editTask={this.editTask}\n          />\n        </div>\n      </div>\n\n    );\n  }\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}