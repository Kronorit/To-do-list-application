{"version":3,"sources":["components/SearchBar.js","components/BarNav.js","components/TaskForm.js","components/Task.js","components/TasksUndone.js","components/TasksDone.js","components/Tasks.js","logic/assignId.js","App.js","index.js"],"names":["SearchBar","className","id","type","placeholder","React","Component","BarNav","TaskForm","props","state","title","handleChange","bind","e","this","setState","target","value","onSubmit","addTask","preventDefault","autoComplete","required","onChange","Task","inputValue","edit","blurHandler","trim","editTask","clickHandler","onClick","completed","spellCheck","autoFocus","onBlur","toggleCompleted","checked","htmlFor","deleteTask","TasksUndone","tasksUndone","tasks","filter","task","map","TasksDone","tasksDone","Tasks","assignId","array","j","i","idArray","push","length","parseInt","App","a","fetch","res","json","data","newTasks","undefined","alert","unshift","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8597e60.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './components-css/SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n  render() {\r\n    return(\r\n    <form className=\"search-bar\">\r\n      <input id=\"bar\" type=\"text\" placeholder =\"Search a task\"/>\r\n      <button id=\"button\"><i className=\" fas fa-search\"></i></button>\r\n    </form>\r\n    );\r\n  }    \r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nimport SearchBar from './SearchBar.js';\r\n\r\nimport './components-css/BarNav.css';\r\n\r\nclass BarNav extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <nav className=\"nav-main\">\r\n                <h2 className=\"nav-title\">\r\n                    <span>Walkie</span>Taskie\r\n                </h2>\r\n                <SearchBar/>\r\n                <button className=\"delete-tasks-button\">Delete tasks done</button>\r\n            </nav>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default BarNav;\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport './components-css/TaskForm.css';\r\n\r\nclass TaskForm extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: ''\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({title: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n                className=\"create-task-form\" \r\n                onSubmit={e => {\r\n                    this.props.addTask(this.state.title)\r\n                    this.setState({title: ''});\r\n                    e.preventDefault();\r\n                }}\r\n            >\r\n                <input type=\"text\" id=\"create-task-title\" placeholder=\"Create a new task\" autoComplete=\"off\" value={this.state.title} required onChange={this.handleChange}/>\r\n                <button id=\"create-task-button\"><i className=\"fas fa-plus\"></i></button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskForm;","import React from 'react';\r\nimport './components-css/Task.css';\r\n\r\nclass Task extends React.Component{\r\n\r\n    state = {\r\n        inputValue: this.props.title,\r\n        edit: false\r\n    }\r\n    \r\n    handleChange = e => {\r\n        this.setState({inputValue: e.target.value});\r\n    }\r\n\r\n    blurHandler = () => {\r\n        if (this.state.inputValue.trim() === \"\") {\r\n            this.setState({inputValue: \"\"});\r\n        }\r\n        this.setState({edit: false});\r\n        this.props.editTask(this.props.id, this.state.inputValue);\r\n    }\r\n\r\n    clickHandler = () => {\r\n        this.setState({edit: true});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id={\"task\" + this.props.id} className=\"task\" onClick={() => {this.clickHandler();}} title=\"Edit task\">\r\n                {this.state.edit && !this.props.completed ? (<input type=\"text\" id=\"input-title\" value={this.state.inputValue} spellCheck=\"false\" autoFocus={true} onChange={this.handleChange} onBlur={() => {this.blurHandler()}}/>) : (<h3 id={\"title-task\" + this.props.id} className={\"task-title \" + (this.props.completed  ? \"task-done\" : \"task-undone\")}>{this.props.title}</h3>)}\r\n                <div className=\"task-buttons\">\r\n                    <input \r\n                        type=\"checkbox\" \r\n                        className=\"toggle-completed\" \r\n                        id={\"input-task\" + this.props.id} \r\n                        onChange={() => {this.props.toggleCompleted(this.props.id);}}\r\n                        checked= {this.props.completed}\r\n                    />\r\n                    <label className=\"input-label\" htmlFor={\"input-task\" + this.props.id} title=\"Mark as done\"></label>\r\n                    <button \r\n                        className=\"task-delete-button\" \r\n                        onClick={() => {this.props.deleteTask(this.props.id)}}\r\n                        title=\"Delete task\"\r\n                    >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                </div>    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\n\r\nimport Task from './Task.js'\r\n\r\nclass TasksUndone extends React.Component {\r\n\r\n    render() {  \r\n        const tasksUndone = this.props.tasks.filter(task => task.completed !== true);\r\n        return (\r\n            <div className=\"tasks-undone\">\r\n                {tasksUndone.map(task => {\r\n                    return(\r\n                        <Task \r\n                            title={task.title} \r\n                            completed={task.completed} \r\n                            id={task.id} \r\n                            toggleCompleted={this.props.toggleCompleted} \r\n                            deleteTask={this.props.deleteTask} \r\n                            editTask={this.props.editTask}\r\n                            key={task.id}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>) \r\n    }\r\n}\r\n\r\nexport default TasksUndone;","import React from 'react';\r\n\r\nimport Task from './Task.js'\r\n\r\nclass TasksDone extends React.Component {\r\n\r\n    render() {    \r\n        const tasksDone = this.props.tasks.filter(task => task.completed === true);\r\n        return (\r\n            <div className=\"tasks-done\">\r\n                {tasksDone.map(task => {\r\n                    return(\r\n                        <Task \r\n                            title={task.title} \r\n                            completed={task.completed} \r\n                            id={task.id} \r\n                            toggleCompleted={this.props.toggleCompleted} \r\n                            deleteTask={this.props.deleteTask}\r\n                            key={task.id}\r\n                        />\r\n                    );\r\n                    \r\n                })}\r\n            </div>) \r\n    }\r\n}\r\n\r\nexport default TasksDone;","import React from 'react';\r\n\r\nimport TasksUndone from './TasksUndone.js';\r\nimport TasksDone from './TasksDone.js';\r\n\r\nclass Tasks extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"tasks\">\r\n                <TasksUndone \r\n                    tasks={this.props.tasks}\r\n                    toggleCompleted={this.props.toggleCompleted} \r\n                    deleteTask={this.props.deleteTask}\r\n                    editTask={this.props.editTask}\r\n                />\r\n                <hr/>\r\n                <TasksDone \r\n                    tasks={this.props.tasks}\r\n                    toggleCompleted={this.props.toggleCompleted} \r\n                    deleteTask={this.props.deleteTask}\r\n                    editTask={this.props.editTask}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tasks;","function assignId(array) {\r\n\tlet j = 0;\r\n\tlet i = 0;\r\n\tlet id = 0;\r\n\tlet idArray = [];\r\n\r\n\t// Create array with object's id;\r\n\tfor (j in array) idArray.push(array[j].id);\r\n\r\n\t// Create new id\r\n\tfor (i = 0; i < idArray.length; i++) {\r\n\t\tfor (j in idArray) {\r\n\t\t\tif (parseInt(idArray[j]) === id) {\r\n\t\t\t\tid += 1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (parseInt(j) + 1 === parseInt(idArray.length)) {\r\n\t\t\t\treturn id;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// In case that for loop's return id does not work do this\r\n\r\n\treturn id;\r\n}\r\n\r\nexport default assignId;","import React from 'react';\n\nimport './App.css';\n\n\n// Components\n\nimport BarNav from './components/BarNav.js';\nimport TaskForm from './components/TaskForm.js';\nimport Tasks from './components/Tasks.js';\n\n// Logic\n\nimport assignId from './logic/assignId';\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      title: 'Lorem Ipsum Dolor'\n    };\n\n    // Binded functions\n\n    this.toggleCompleted = this.toggleCompleted.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.addTask = this.addTask.bind(this);\n    this.editTask = this.editTask.bind(this);\n  }\n\n  // Fetch data from the server on component mount.\n\n  async componentDidMount(){\n    const res = await fetch('https://jsonplaceholder.typicode.com/todos');\n    const data = await res.json();\n    this.setState({\n      tasks: data,\n    });\n  }\n\n  // Toggle completed property of an object.\n\n  toggleCompleted(id) {\n    const tasks = this.state.tasks;\n    for (let task in tasks) {\n      if(tasks[task].id === id){\n        tasks[task].completed = !tasks[task].completed;\n        break;\n      }\n    }\n    this.setState({tasks: tasks});\n  }\n\n  // Delete a task.\n\n  deleteTask(id) {\n    const newTasks = this.state.tasks.filter(task => task.id !== id);\n\n    this.setState({tasks: newTasks});\n  }\n\n  // Create a new task.\n\n  addTask(title) {\n    const tasks = this.state.tasks;\n    if (title === null || title === undefined || title.trim() === '') alert(\"You have to write a title to create a new task\");\n    else {  \n      tasks.unshift({\n        id: assignId(tasks),\n        title: title,\n        completed: false\n      });\n\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }\n\n  // Edit a task.\n\n  editTask(id, title) {\n    const tasks = this.state.tasks;\n    for (let i in tasks){\n      if (parseInt(tasks[i].id) === parseInt(id)) {\n        tasks[i].title = title;\n        break;\n      } \n    }\n    this.setState({tasks: tasks});\n  }\n\n  render() {\n    return (\n      <div>\n        <BarNav/>\n        <TaskForm addTask={this.addTask}/>\n        <div className=\"content\">\n          <h2 className=\"task-list-title\">{this.state.title}</h2>\n          <Tasks \n            tasks={this.state.tasks}\n            tasksDone={this.state.tasksDone} \n            tasksUndone={this.state.tasksUndone} \n            toggleCompleted={this.toggleCompleted} \n            deleteTask={this.deleteTask}\n            editTask={this.editTask}\n          />\n        </div>\n      </div>\n\n    );\n  }\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}